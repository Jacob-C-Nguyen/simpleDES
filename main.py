import encryptionProject as enc
import os.path



print("Welcome to Jacob's really cool plain text encoding program!")

keyList = []
#keyList = ["01001001", "10110100"]#test Keys

while(True):

    print("""\nWhat would you like to do? 
          1) Load Keys
          2) Generate Keys
          3) Encrypt File
          4) Decrypt File
          5) Exit Program
          """)
    
    userInput = input("         (Please input the number corrisponding to the option): ")

    #loads in keys to use
    if(userInput == "1"):
        k1 = input("Enter the value for key1: ")
        k2 = input("Enter the value for key2: ")
        isntValidKey = False

        
        #checks if the keys are the right length, and are in the right format
        if(len(k1) != 8 and len(k2) != 8):
            isntValidKey = True

        for char in k1:
            if(char != "0" and char != "1"):
                isntValidKey = True

        for char in k2:
            if(char != '0' and char != '1'):
                isntValidKey = True

             
        if(isntValidKey):
            print("ERROR: You need to input a valid 8 bit key")
        else:
            keyList = [k1, k2]
            print("Keys Loaded!")


    #generates 2 8 bit keys for use
    elif(userInput == "2"):

        # Lists of the keys generated by DES
        trueKey = enc.keyGen()
        keyList = enc.k1k2Gen(trueKey)
        print("SAVE THESE KEYS: " + "\n     Key1: " + keyList[0] + "\n     Key2: " + keyList[1])
        print("Keys auto loaded")







    #encryption algorithm function calls
    elif(userInput == "3"):
        reading = ""    #file to read


        #loads file into reading
        fileToRead = input("please input the name of the text file to encrypt (please omit \".txt\"): ") + ".txt"


        if(os.path.exists(fileToRead) and os.path.isfile(fileToRead)):
            userText = open(fileToRead, 'r')                             #this is secure 100%
            reading = userText.read()


            #encrypts each character individually and appends it to "encryptedString"
            if(len(keyList) != 0):
                encryptedString = ""

                for char in reading:
                    encryptedString += (enc.charEncrypt(char, keyList[0], keyList[1]))

            
                try:
                    #writes "encryptedString" into the output file of your name choice
                    f = open(input("Please name the encrypted file (please omit \".txt\"): ") + ".txt", "w")
                    f.write(encryptedString)
                    f.close()
                except:
                    print("ERROR: There was an unexpected error. Idk what happened. Maybe you used the wrong key?")

                print("File was successfully encrypted! Check your directory for the named file")

            else:
                print("Error: No keys loaded")

        else:
            print("ERROR: File was either not found or is not a valid .txt file")
        





    #decrypts generated ".txt" file
    elif(userInput == "4"):

        dec = ""    #file to read


        #loads file into reading
        fileToRead = input("please input the name of the encrypted file to decrypt (please omit \".txt\"): ") + ".txt"

        if(os.path.exists(fileToRead) and os.path.isfile(fileToRead)):
            cipherText = open(fileToRead, 'r')                             #this is secure 100%
            dec = cipherText.read()




            #checks if dec is a valid encrypted file in my weird binary format
            notInFormat = False
            for c in dec:
                if(c != '0' and c != '1'):
                    notInFormat = True

            if(len(dec) % 8 != 0 and notInFormat):
                print("ERROR: Encrypted file is not in the right format (must be a file containing a string of 8 bit binary)")



            else:
                #decrypts 
                if(len(keyList) != 0):
                    decryptedString = ""

                    front = 8       #for 8th bit
                    rear = 0        #for starting bit

                    dec += " "

                    #takes 8 bits at a time in dec, and decrypts the bits, converting them into plain characters 
                    #and appending it into "decrypted string"
                    while(front < len(dec)):
                        decryptedString += (enc.charDecrypt((dec[rear:front]), keyList[0], keyList[1]))
                        rear += 8
                        front += 8

                    try:
                        #adds the decrypted string to the output file
                        d = open(input("Please name the decrypted text file (please omit \".txt\"): ") + ".txt", "w")
                        d.write(decryptedString)
                        d.close()
                    except:
                        print("ERROR: There was an unexpected error. Idk what happened. Maybe you used the wrong key?")

                    print("File successfully decrypted!")

                else:
                    print("Error: No keys loaded")

        else:
            print("ERROR: File was either not found or is not a valid .txt file")

    elif(userInput == "5"):
        print("BYE BYE!")
        exit()

    
    elif(userInput == "69"):
        print("funny")
    elif(userInput == "420"):
        print("weed")

    else:
        print("That doesn't work try again.")